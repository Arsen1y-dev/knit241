package org.knit.solutions;

import org.knit.TaskDescription;
import org.knit.solutions.task17.MontyHallParadoxGame;

/*
 –û–ø–∏—Å–∞–Ω–∏–µ:

–ü–∞—Ä–∞–¥–æ–∫—Å –ú–æ–Ω—Ç–∏ –•–æ–ª–ª–∞ ‚Äî —ç—Ç–æ –∑–∞–¥–∞—á–∞ –∏–∑ —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ–º —à–æ—É "Let's Make a Deal".
–ü—Ä–∞–≤–∏–ª–∞ —Ç–∞–∫–∏–µ:

–£—á–∞—Å—Ç–Ω–∏–∫ –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–Ω—É –∏–∑ —Ç—Ä—ë—Ö –¥–≤–µ—Ä–µ–π.
–í–µ–¥—É—â–∏–π, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç, —á—Ç–æ –∑–∞ –¥–≤–µ—Ä—è–º–∏, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–¥–Ω—É –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–≤–µ—Ä–µ–π, –∑–∞ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –ø—Ä–∏–∑–∞.
–£—á–∞—Å—Ç–Ω–∏–∫—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –ª–∏–±–æ —Å–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä –Ω–∞ –æ—Å—Ç–∞–≤—à—É—é—Å—è –¥–≤–µ—Ä—å, –ª–∏–±–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.
üìå –í–æ–ø—Ä–æ—Å:

–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–∏–º—É–ª—è—Ü–∏—é —ç—Ç–æ–π –∏–≥—Ä—ã –Ω–∞ Java, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ª—É—á—à–µ: –º–µ–Ω—è—Ç—å –≤—ã–±–æ—Ä –∏–ª–∏ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø—Ä–∏ —Å–≤–æ—ë–º?.
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–≤–µ—Å—Ç–∏ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1000000) –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞ –≤ –∫–∞–∂–¥–æ–º –∏–∑ –¥–≤—É—Ö —Å–ª—É—á–∞–µ–≤.
üìå –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:

–ü—Ä–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1 –º–∏–ª–ª–∏–æ–Ω):

–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏: –æ–∫–æ–ª–æ 66.66% (–∏–ª–∏ 2/3).
–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞ –±–µ–∑ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è: –æ–∫–æ–ª–æ 33.33% (–∏–ª–∏ 1/3).
 */

@TaskDescription(taskNumber = 17, taskDescription = "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–¥–æ–∫—Å–∞ –ú–æ–Ω—Ç–∏ –•–æ–ª–ª–∞")
public class Task17 implements Solution {
    final int TOTAL_GAMES = 1_000_000;

    @Override
    public void execute() {
        MontyHallParadoxGame game = new MontyHallParadoxGame();
        double winsCountWithoutChange = 0;
        double winsCountWithChange = 0;

        for (int i = 0; i < TOTAL_GAMES; i++) {
            game.play();
            winsCountWithoutChange += game.isDidNotChangedChoiceWon() ? 1 : 0;
            winsCountWithChange += game.isDidChangedChoiceWon() ? 1 : 0;
        }

        System.out.println("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç—å –Ω–µ –º–µ–Ω—è—è –≤—ã–±–æ—Ä: " + winsCountWithoutChange / TOTAL_GAMES);
        System.out.println("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç—å –º–µ–Ω—è—è –≤—ã–±–æ—Ä: " + winsCountWithChange / TOTAL_GAMES);
    }
}